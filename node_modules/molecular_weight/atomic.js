//Source https,//scipoly.com/technical-library/table-of-atomic-weights/



const atomic_weight = new Map([
['Ac' , 227], 
['Al' , 26.98],
['Am' , 243],
['Sb' , 121.76],
['Ar' , 39.944],
['As' , 74.91],
['At' , 210],
['Ba' , 137.36],
['Bk' , 247],
['Be' , 9.013],
['Bi' , 209],
['B' , 10.82],
['Br' , 79.916],
['Cd' , 112.41],
['Ca' , 40.08],
['Cf' , 251],
['C' , 12.011],
['Ce' , 140.13],
['Cs' , 132.91],
['Cl' , 35.457],
['Cr' , 52.01],
['Co' , 58.94],
['Cu' , 63.54],
['Cm' , 247],
['Dy' , 162.51],
['Fm' , 253],
['F' , 19.00],
['Fr' , 223],
['Gd' , 157.26],
['Ga' , 69.72],
['Ge' , 72.60],
['Au' , 197.0],
['Hf' , 178.50],
['He' , 4.003],
['Ho' , 164.94],
['H' , 1.0080],
['In' , 114.82],
['I' , 126.91],
['Ir' , 192.2],
['Fe' , 55.85],
['Kr' , 83.80],
['La' , 138.92],
['Pb' , 207.21],
['Li' , 6.940],
['Lu' , 174.99],
['Mg' , 24.32],
['Mn' , 54.94],
['Md' , 256],
['Hg' , 200.61],
['Mo' , 95.95],
['Nd' , 144.27],
['Ne' , 20.183],
['Np' , 237],
['Ni' , 58.71],
['NB' , 92.91],
['N' , 14.008],
['No' , 253],
['Os' , 190.2],
['O' , 16.0000],
['Pd' , 106.4],
['P' , 30.975],
['Pt' , 195.09],
['Pu' , 244],
['Po' , 210],
['K' , 39.100],
['Pr' , 140.92],
['Pm' , 145],
['Pa' , 213],
['Ra' , 226],
['Re' , 186.22],
['Rh' , 102.91],
['Rb' , 85.48],
['Ru' , 101.10],
['Sm' , 150.35],
['Sc' , 44.96],
['Se' , 78.96],
['Si' , 28.09],
['Ag' , 107.88],
['Na' , 22.991],
['Sr' , 87.63],
['S' , 32.066],
['Ta' , 180.95],
['Tc' , 98],
['Te' , 127.61],
['Tb' , 158.93],
['Tl' , 204.39],
['Th' , 232],
['Tm' , 168.94],
['Sn' , 118.70],
['Ti' , 47.90],
['W' , 183.86],
['U' , 238],
['V' , 50.95],
['Xe' , 131.30],
['Yb' , 173.04],
['Y' , 88.92],
['Zn' , 65.38],
['Zr' , 91.22]
]);

function isLetter(str) {
    if (str.match(/[a-z]/i) || str.match(/[A-Z]/i) || str.match(/[0-9]/i)) {
        return true;
    }
    return false;
  }

function char_type(character ) {
    if (!isLetter(character)) {
        return -1;
    }
    if (!isNaN(character)) {
        return 0;
    }
    if (character == character.toUpperCase()) {
        return 1;
    }
    return 2;
}

function recognize(string){
    let map = new Map();
    let array = string.split('');
    if (array.length == 0) {
        return false;
    }
    let tmp_name = '';
    let tmp_num = 1;
    let prev = 'capital';  

    if (char_type(array[0]) != 1) {
       // console.log(false);
        return false;        
    }

    for (let i = 0; i < array.length; i++) {
        switch (char_type(array[i])) {
            case -1:
                //console.log(false);
                return false;               
            case 0:                
                if (prev == 'num') {
                    tmp_num = 10 * tmp_num + parseInt(array[i]);
                } else {
                    tmp_num = parseInt(array[i]);
                }
                prev = 'num';
                map.set(tmp_name, tmp_num);
                break;
            case 1:
                tmp_name = array[i];
                prev = 'capital';
                tmp_num = 1;
                map.set(tmp_name, tmp_num);
                break;
            case 2:
                map.delete(tmp_name);
                tmp_name = tmp_name + array[i];
                prev = 'low';
                tmp_num = 1;
                map.set(tmp_name, tmp_num);
                break;
            default:
                console.log(false);
                return false;
        }
        if (i == array.length-1) {
            map.set(tmp_name, tmp_num);
        }       
    }
    for (let key of map.keys()) {
            if (atomic_weight.has(key) == false) {
                //console.log(false);
                return false;
            }                    
      }

    //console.log(map);
      return map;

}

function calc(string) {
    let map = recognize(string);
    let sum = 0;
    if (map == false) {
        return 'Unknown element';
    }
    for (let item of map.entries()) {
        sum = atomic_weight.get(item[0]) * item[1] + sum;
    }
    return sum;
}


module.exports = {calc};